method 1
void leftview(vector<int> &ans,Node*root,int level,int & maxlevel){
    if(!root) return ;
    if(maxlevel < level){
        maxlevel=level;
        ans.emplace_back(root->data);
    }
    leftview(ans,root->left,level+1,maxlevel);
    leftview(ans,root->right,level+1,maxlevel);
}
//Function to return a list containing elements of left view of the binary tree.
vector<int> leftView(Node *root)
{
    vector<int> ans;
    int maxlevel=0;
    if(!root) return ans; 
    
    leftview(ans,root,1,maxlevel);
    
    return ans;
   // Your code here
}

method 2
vector<int> leftView(Node *root)
{
    vector<int> ans;
    if(!root) return ans; 
    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        int k=q.size();
        for(int i=0;i<k;i++)
        {
            auto temp=q.front();
            q.pop();
            if(i==0)
            ans.emplace_back(temp->data);
            
            if(temp->left)
            q.push(temp->left);
            
            if(temp->right)
            q.push(temp->right);
        }
    }
    
    return ans;
   // Your code here
}
