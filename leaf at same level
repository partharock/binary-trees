best solution using queue and lowest memory
   bool check(Node *root)
    {
        queue<pair<Node*,int> > q;
        if(!root) return true;
        q.push({ root,0 } );
        int level=-1;
        while(!q.empty()){
            auto  temp=q.front();
            q.pop();
            if(!temp.first->left and !temp.first->right)
            {
                if(level==-1 or level==temp.second)
                level=temp.second;
                else
                return false;
            }
            if(temp.first->left)
            q.push({temp.first->left,temp.second+1});
            
            if(temp.first->right)
            q.push({temp.first->right,temp.second+1});
        }
        return true;
        //Your code here
    }
